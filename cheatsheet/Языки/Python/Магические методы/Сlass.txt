<strong>new</strong>(cls, [...)
    Это первый метод, который будет вызван при инициализации объекта. 
    Он принимает в качестве параметров класс и потом любые другие аргументы, 
    которые будут переданы в <strong>init</strong>. <strong>new</strong> используется весьма редко, но иногда бывает полезен, 
    в частности, когда класс наследуется от неизменяемого (immutable) типа, такого как 
    кортеж (tuple) или строка.
<strong>init</strong>(self, [...)
    Инициализатор класса. Ему передаётся всё, с чем был вызван первоначальный конструктор 
    (если мы вызываем x = SomeClass(10, 'foo'), <strong>init</strong> получит 10 и 'foo' в качестве аргументов. 
    <strong>init</strong> почти повсеместно используется при определении классов.
<strong>del</strong>(self)
    Если <strong>new</strong> и <strong>init</strong> образуют конструктор объекта, <strong>del</strong> это его деструктор. 
    Он не определяет поведение для выражения del x (поэтому этот код не эквивалентен x.<strong>del</strong>()). 
    Скорее, он определяет поведение объекта в то время, когда объект попадает в сборщик мусора. 
    Это может быть довольно удобно для объектов, которые могут требовать дополнительных чисток 
    во время удаления, таких как сокеты или файловые объекты.
<pre><code class="language-python">class Class:
    def __init__(self, arg):
        self.arg = arg

    def __del__(self):
        del self.arg
</code></pre>