Указатели
&amp; и *
<pre><code class="language-cpp">int count = 100
m = &amp;count; //m получает адрес count
m == например 2000
q = *m; //q получает значение по адресу m
q == 100

m = &amp;count;
</code></pre>
Это адрес внутреннего местоположения переменной в компьютере.
С самим значением переменной ничего не делается.
Оператор &amp; можно запомнить как «взятие адреса».
Поэтому вышеупомянутый оператор присваивания можно прочитать как «m получает адрес count».
Для лучшего понимания данного присваивания предположим, 
что переменная count находится по адресу 2000. 
Также предположим, что count имеет значение 100. 
После данного присваивания m будет содержать 2000. 
Оператор*, дополняющий &amp;. Это унарный оператор, возвращающий значение переменной по указанному адресу.
Например: если m содержит адрес переменной count, то
<pre><code class="language-cpp">q = *m;
</code></pre>
Следуя вышеприведенному примеру, q получит значение 100, 
поскольку 100 хранилось по адресу 2000 - адресу, находящемуся в переменной m.
Операция* может быть запомнена как «по адресу».
В данном случае оператор можно прочитать как «q получает значение по адресу m».