Каждая переменная или объект хранит данные в определенной ячейке в памяти компьютера. 
Каждый раз, создавая новую переменную, мы создаем новую ячейку в памяти, с новым значением для неё. 
Чем больше ячеек, тем больше компьютерной памяти будет занято.
Адрес в памяти компьютера это число, к которому мы можем получить доступ. 
Указатель - это тот же адрес в памяти, по которому мы получаем переменную и по итогу её значение.
Чтобы работать с указателями необходимо воспользоваться двумя специальными символами: &amp; и *. Пример использования:
<pre><code class="language-cpp">int t = 237; // Простая переменная
int *p; // Создание указателя, который принимает лишь адрес другой переменной
p = &amp;t; // Устанавливаем адрес нашей первой переменной
</code></pre>
Переменные t и p будут равны числу 237, так как оба ссылаются на одну ячейку. 
Сам же компьютер на вычислении обеих переменных потратит меньше усилий, ведь обе переменные ссылаются на одно и то же.
Ссылки в C++
Ссылки и указатели схожи между собой, так как оба в качестве значения имеют лишь адрес некого объекта.
Указатель хранит адрес ячейки и если мы захотим изменить значение этой ячейки, то нам придется выполнить операцию «разыменования»:
<pre><code class="language-cpp">float some = 391; // Простая переменная
float *u = &amp;some; // Указатель на переменную
*u = 98; // Изменение значения переменной
</code></pre>
В ссылках такого понятия нет, так как меняя ссылку вы автоматически меняете и переменную. 
Ссылки напрямую ссылаются к переменной, поэтому их синтаксис проще:
<pre><code class="language-cpp">char symbol = 'A'; // Простая переменная
char &amp;ref = symbol; // Создание ссылки на переменную
// Поскольку мы ссылаемся на переменную, то можем её использовать
// как отдельно взятую переменную
cout &amp;lt;&amp;lt; ref &amp;lt;&amp;lt; endl; // Вывод символа &quot;А&quot;
ref = 'C'; // Изменение на символ &quot;C&quot;
</code></pre>
Использование ссылок и указателей оправдано в случае передачи данных в функции или же в объекты. 
Также данные технологии отлично подойдут для передачи большого объема данных в ходе программы.