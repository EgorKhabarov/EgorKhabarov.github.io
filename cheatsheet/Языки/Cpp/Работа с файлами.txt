Многие языки программирования предоставляют классы для работы с файлами и директориями проекта. 
Язык C++ обладает множеством классов для записи и чтения данных из файлов.
Работа с файлами
При работе с файлами всегда необходимо помнить две вещи:
Перед началом работы с файлом его необходимо открыть;
После завершения работы с файлом его необходимо закрыть.
Если файл не открыт или же неверно открыт, то вы не можете полноценно работать с его содержимым. 
С закрытием все проще, но и коварнее. Если вы не закроете файл, то программа будет работать верно, 
тем не менее, чем больше будет открытых файлов, тем больше программа будет перегружена и в какой-то момент она просто зависнет или выключиться.
Исключения и файлы
Поскольку не всегда известно будет ли файл в проекте или на компьютере пользователя, 
то всегда лучше открывать файлы за счёт использования исключений. 
Выполняйте открытие файлов в блоке try catch и тем самым вы обезопасите себя от любых непредвиденных обстоятельств.
Запись данных в файл
При записи данных в файл его изначально необходимо открыть. Для этого в языке C++ используется класс ofstream:
<pre><code class="language-cpp">// Создание/открытие файла &quot;examples.txt&quot;
ofstream itproger_file(&quot;examples.txt&quot;);
// Можно было использовать метод open
// ofstream itproger_file;
// itproger_file.open(&quot;examples.txt&quot;);
// но первая запись короче, поэтому стоит использовать её
if (itproger_file.is_open()) { // Проверяем открыт ли файл
    itproger_file &amp;lt;&amp;lt; &quot;Simple text&quot;; // Записываем текст в файл
    itproger_file.close(); // Всегда необходимо закрывать файл
} else // Если файл не удалось открыть, тогда выдаем ошибку
    cout &amp;lt;&amp;lt; &quot;Error!&quot; &amp;lt;&amp;lt; endl;
</code></pre>
Таким образом мы можем открыть файл и поместить в него любую информацию.
При открытии файла можно указать режим открытия. Существуют несколько режимов и все они представлены на фото ниже:
Константа         Описание
ios_base::in      открыть файл для чтения
ios base::out     открыть файл для записи
ios base::ate     при открытии переместить указатель в конец файла
ios_base::app     открыть файл для записи в конец файла
ios_base::trunc   удалить содержимое файла, если он существует
ios_base::binary  открытие файла в двоичном режиме
Режим необходимо прописывать в качестве второго параметра при открытии файла:
<pre><code class="language-cpp">#include &amp;lt;iostream&gt;
#include &amp;lt;fstream&gt;

using namespace std; 

int main() {
    // Открываем файл для записи в него текста
    ofstream file(&quot;test.txt&quot;, ios_base::out);
    if (file.is_open()) { // Проверяем открыт ли сам файл
        file &amp;lt;&amp;lt; &quot;Simple world&quot;; // Записываем текст в начало файла
        textFile.close(); // Закрываем файл
    }

    cin.get();
    return 0; 
}
</code></pre>
Чтение данных из файла
Для чтения данных файл необходимо также изначально открыть и в конце закрыть. 
Чтобы прочесть содержимое файла используется класс ifstream:
<pre><code class="language-cpp">#include &amp;lt;iostream&gt;
#include &amp;lt;fstream&gt;

using namespace std; 

int main() {
    // здесь будет храниться промежуточный текст,
    // который мы будем считывать из файла
    char temp[100];
    ifstream some_file(&quot;test.txt&quot;); // открываем файл для чтения

    // считываем лишь первое слово и помещаем в переменную temp
    some_file &gt;&gt; temp;
    cout &amp;lt;&amp;lt; temp &amp;lt;&amp;lt; endl; // выводим эту переменную

    // Считываем определенное количество символов - 100
    // и записываем их в нашу переменную
    some_file.getline(temp, 100);
    some_file.close(); // Закрываем файл
    cout &amp;lt;&amp;lt; temp &amp;lt;&amp;lt; endl; // Отображаем переменную temp

    cin.get();
    return 0; 
}
</code></pre>