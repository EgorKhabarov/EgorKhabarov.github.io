Массивы позволяют хранить большой объем информации в одном месте. В языке C++ можно найти несколько основных типов массивов. 
Одномерный массив
Чтобы создать массив необходимо указать тип данных, прописать название и поставить квадратные скобки. 
Это очень схоже с созданием обычных переменных, но здесь после названию идут ещё квадратные скобки.
В массивах отсчет начинается с 0, поэтому первый элемент по индексу будет равен 0, второй - 1 и так далее.
Примеры создания массива:
<pre><code class="language-cpp">char stroka[2]; // Создание пустого массива
int[] numbers; // Будет считаться ошибкой

int nums[4];
nums[0] = 1; // Добавление элементов в массив из 4 элементов

int nums2[] = { 1, 2, 3, 5 }; // Присвоение всех значений сразу
</code></pre>
Работать с элементами массива можно точно как с переменными. Мы можем их выводить или же устанавливать для них новые значения.
Многомерный массив
Многомерный массив - это массив, в котором каждый элемент является другим массивом. 
На практике очень редко используются массивы с более чем третим уровнем вложенности. 
То есть массивы, в которых все элементы являются другими массивами 
и в котором все элементы также другие массивы встречаются очень и очень редко на практике.
Мы не будем изучать подобные массивы, так как принцип их построения 
точно такой же как при работе с двумерными массивами.
Для создания двумерных массивов необходимо использовать двойные квадратные скобки после названия. 
Выглядит такой массив как матрица, а записывается следующим образом:
<pre><code class="language-cpp">int x[3][3] = { { 0, 34, 2 }, { 3, 4, 5 } };
cout &amp;lt;&amp;lt; x[0][1]; // Выведет 34

// Можно их сразу не присваивать
char symbols[5][2];
symbols [0][1] = 'A';
</code></pre>
Мы видим, что элементы первого массива являются другими массивами. 
Чтобы выбрать какой-либо объект используйте ту же структуру что и для одномерных массивов, 
вот только теперь указывайте индекс как первого массива, так и второго:
<pre><code class="language-cpp">x[0][1] = 1; // Вместо 34 теперь будет 1
</code></pre>